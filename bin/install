#!/usr/bin/bash

# ---------------------------------
# Setup
# ---------------------------------

# Obs, bail out
set -e

# Constants
DEV="$HOME/Development"

# Printers
info () {
	echo -e "\r[ \033[00;34m!!\033[0m ] $1"
}

success () {
	echo -e "\r\033[2K[ \033[00;32mOK\033[0m ] $1"
}

warning () {
  echo -e "\r[ \033[00;33m..\033[0m ] $1"
}

# ---------------------------------
# Initiate
# ---------------------------------

# Supa-dupa-fly
sudo -v

# Go home, and start fresh
cd && clear

# Be polite!
echo "Hello $(whoami)! Let's get you set up."

printf "\n"

# ---------------------------------
# Go nuclear
# ---------------------------------

# TODO: Confirm that we actually want to nuke everything!!

# Remove all life on earth...
info "Launching missiles"
printf "\n"

# ---------------------------------
# Create file system 
# ---------------------------------

info "Let's build a place to call home"
printf "\n"

DIR=(
				"$DEV"
				"$DEV/personal"
				"$HOME/.config"
				"$HOME/Archives"
				"$HOME/Pictures/Screenshots"
)

for dir in "${DIR[@]}"; do
    if [ -d "$dir" ]; then  # Regular space here, not non-breaking
        warning "Directory $dir already exists, skipping..."
    else
        mkdir -p "$dir"
        info "Directory $dir created successfully!"
    fi
done

printf "\n"
success "A new ecosystem is in place!"

printf "\n"

# ---------------------------------
# SSH
# ---------------------------------

info "Handover keys to the kingdom"
printf "\n"

SSH="$HOME/.ssh"

if ! [[ -f "$SSH/authorized_keys" ]]; then
  mkdir -p "$SSH"
  ssh-keygen -t ed25519 -C "iivari.leinonen@gmail.com" -f "$SSH/id.personal"
  cat "$SSH/id.personal.pub" >> "$SSH/authorized_keys"
  eval "$(ssh-agent -s)"
  echo "# Github
  Host github.com
    AddKeysToAgent yes
    IdentityFile $SSH/id.personal
    IgnoreUnknown UseKeychain" >> "$SSH/config"
  ssh-add "$SSH/id.personal"
  success "SSH keys generated successfully!"
else
  success "SSH keys already generated, skipping..."
fi

printf "\n"

# ---------------------------------
# Install Nix
# ---------------------------------

info "Let's Nixify this bad boy!"
printf "\n"

if command -v nix &>/dev/null; then
  warning "Nix already installed. Checking for updates..."
	printf "\n"

  nix-channel --update

	printf "\n"
  success "Nix updated successfully!"
else
  warning "No Nix found, installing..."
  printf "\n"

  curl -L https://nixos.org/nix/install | sh
	exec zsh

	printf "\n"
  success "Nix installed successfully!"
fi

printf "\n"

# ---------------------------------
# Get dotfiles
# ---------------------------------

info "Bring in the big guns"
printf "\n"

nix-shell -p git --run "git clone https://github.com/ildx/jarvis.git $DEV/personal/jarvis"

printf "\n"

# ---------------------------------
# Aftermath
# ---------------------------------

info "Remember to add ssh key to github ( pbcopy < path_to_key )"
printf "\n"
